unit uRotinas;

interface

uses
  System.SysUtils;

type
 TRotinas = class
   private

   protected

   public
     function RetornaNumero(vpValor: string): string;
     function ValidarCPF(vpCPF: string): Boolean;

   published

 end;



implementation

{ TRotinas }

function TRotinas.RetornaNumero(vpValor: string): string;
var
  i: Integer;
begin
  Result := '';

  for i := 1 to Length(vpValor) do
    if CharInSet(vpValor[i], ['0'..'9']) then
       Result := Result + vpValor[i];
end;

function TRotinas.ValidarCPF(vpCPF: string): Boolean;
var
  n1: Integer;
  n2: Integer;
  n3: Integer;
  n4: Integer;
  n5: Integer;
  n6: Integer;
  n7: Integer;
  n8: Integer;
  n9: Integer;
  d1: Integer;
  d2: Integer;
  digitado: string;
  calculado: string;
begin
  n1 := StrToInt(vpCPF[1]);
  n2 := StrToInt(vpCPF[2]);
  n3 := StrToInt(vpCPF[3]);
  n4 := StrToInt(vpCPF[4]);
  n5 := StrToInt(vpCPF[5]);
  n6 := StrToInt(vpCPF[6]);
  n7 := StrToInt(vpCPF[7]);
  n8 := StrToInt(vpCPF[8]);
  n9 := StrToInt(vpCPF[9]);

  d1 := n9*2 + n8*3 + n7*4 + n6*5 + n5*6 + n4*7 + n3*8 + n2*9 + n1*10;
  d1 := 11-(d1 mod 11);

  if d1>=10 then
    d1:=0;

  d2:= d1*2 + n9*3 + n8*4 + n7*5 + n6*6 + n5*7 + n4*8 + n3*9 + n2*10 + n1*11;
  d2:= 11-(d2 mod 11);

  if d2>=10 then d2:=0;
    calculado:= IntToStr(d1) + IntToStr(d2);

  digitado := vpCPF[10] + vpCPF[11];
  Result := calculado = digitado;
end;

end.
